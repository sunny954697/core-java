
#import libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""# Load Datasets"""

df = pd.read_csv('student_info.csv')

df.head()

df.tail()

df.shape

"""# Discover and visualize the data to gain insights"""

df.info()

df.describe()

plt.scatter(x=df.study_hours, y=df.student_marks )
plt.xlabel("student study hours")
plt.ylabel("student marks")
plt.title("scatter plot of student study hours vs student marks")

"""## prepare the data for machines learning algorithms"""

#data cleaning

df.isnull()

df.isnull().sum()

df.mean()

df1=df.fillna(df.mean())

df1.isnull().sum()

df1.head()

#split dataset

x=df1.drop("student_marks", axis ="columns")
y=df1.drop("study_hours", axis ="columns")
print("shape of x= ", x.shape)
print("shape of y= ", y.shape)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train,y_test = train_test_split(x,y, test_size=0.2, random_state=51)
print("shape of x_train = ", x_train.shape)
print("shape of y_train = ", y_train.shape)
print("shape of x_test = ", x_test.shape)
print("shape of y_test = ", y_test.shape)

"""## select the model and train it"""

#y = m * x + c

from sklearn.linear_model import LinearRegression
lr = LinearRegression()

lr.fit(x_train,y_train)

lr.coef_

lr.intercept_

m = 3.93
c = 50.44
y = m * 4 +  c
y

lr.predict([[4]])[0][0].round(2)

y_pred = lr.predict(x_test)
y_pred

pd.DataFrame(np.c_[x_test, y_test, y_pred], columns =["study_hours", "student_marks_original","student_marks_predicted"])

"""## present your solution

## save ml model
"""

import joblib
joblib.dump(lr, "students_mark_predictor_model.pkl")

model=joblib.load("students_mark_predictor_model.pkl")

model.predict([[6]])
